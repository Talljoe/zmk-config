/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;

        // zmk,matrix_transform = &five_column_transform;
    };
};

/ {
    combos {
        compatible = "zmk,combos";

        etner {
            bindings = <&kp ENTER>;
            key-positions = <19 20 21>;
        };

        ctrl-enter {
            bindings = <&kp LC(ENTER)>;
            key-positions = <19 20 21 22>;
        };

        backspace {
            bindings = <&kp BACKSPACE>;
            key-positions = <19 20>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <20 21>;
        };

        escape {
            bindings = <&kp ESC>;
            key-positions = <14 16 15>;
        };

        lock {
            bindings = <&kp LC(ESC)>;
            key-positions = <5 38>;
        };

        tab {
            bindings = <&kp TAB>;
            key-positions = <16 15>;
        };

        shift-tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <14 15>;
        };

        save {
            bindings = <&kp LC(S)>;
            key-positions = <14 16>;
            layers = <0>;
        };
    };

    behaviors {
        morpt: morpt {
            compatible = "zmk,behavior-hold-tap";
            label = "MORPT";
            bindings =
                <&mo>,
                <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "hold-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "ASIN";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&mt LS(LCTRL) TAB  &kp Q  &kp W     &kp D       &kp F  &kp M            &kp J            &kp U      &kp K    &kp L     &kp P  &lt 4 BACKSLASH
    &mt LCTRL ESC  &kp A  &kp S     &kp I       &kp N  &kp Y            &kp G            &kp T      &kp H    &kp O     &kp R          &kp SQT
        &kp LSHFT  &kp Z  &kp X     &kp C       &kp V  &kp B    &kp SEMICOLON        &kp MINUS  &kp COMMA  &kp DOT  &kp FSLH            &sl 3
                                 &kp LGUI  &morpt 2 0  &kp E        &kp SPACE  &lt 1 BACKSPACE   &kp RALT
            >;
        };

        Nav {
            bindings = <
&trans  &trans      &trans    &kp C_VOLUME_UP         &trans  &trans      &trans  &kp PG_UP    &kp UP     &trans   &trans  &trans
&trans  &trans  &kp K_BACK         &kp K_MUTE  &kp K_FORWARD  &trans    &kp HOME   &kp LEFT  &kp DOWN  &kp RIGHT  &kp END  &trans
&trans  &trans      &trans  &kp C_VOLUME_DOWN         &trans  &trans      &trans  &kp PG_DN    &trans     &trans   &trans  &trans
                                       &trans         &trans  &trans      &trans     &trans    &trans
            >;

            label = "NAViGATION";
        };

        symbol {
            bindings = <
&kp LA(LEFT_GUI)   &kp LS(EXCL)    &kp LS(AT)  &kp LS(POUND)  &kp LS(DLLR)  &kp LS(PRCNT)            &none         &kp N7     &kp N8  &kp N9  &kp KP_MINUS    &kp KP_DIVIDE
    &kp LEFT_GUI   &kp LS(RBKT)  &kp LS(RBRC)       &kp LBKT      &kp LBRC      &kp GRAVE    &kp LS(TILDE)         &kp N4     &kp N5  &kp N6   &kp KP_PLUS  &kp KP_MULTIPLY
&kp LS(LEFT_GUI)  &kp LS(CARET)  &kp LS(AMPS)   &kp LS(STAR)  &kp LS(LPAR)   &kp LS(RPAR)            &none         &kp N1     &kp N2  &kp N3    &kp KP_DOT     &kp KP_EQUAL
                                                      &trans        &trans         &trans           &kp N0  &sk RIGHT_GUI  &sk RCTRL
            >;

            label = "SYMBOL";
        };

        fn {
            bindings = <
&kp  &kp F1   &kp F2         &kp F3   &kp F4  &kp    &kp        &kp       &kp       &kp         &kp  &kp
&kp  &kp F5   &kp F6         &kp F7   &kp F8  &kp    &kp  &kp RSHFT  &kp RALT  &kp RGUI  &kp RSHIFT  &kp
&kp  &kp F9  &kp F10        &kp F11  &kp F12  &kp    &kp        &kp       &kp       &kp         &kp  &kp
                      &kp      &kp  &kp    &kp        &kp       &kp
            >;

            label = "FN";
        };

        Configuration {
            bindings = <
&sys_reset   &bootloader        &trans        &trans        &trans  &ext_power EP_TOG    &trans  &trans  &trans  &trans  &trans  &trans
    &trans        &trans        &trans        &trans        &trans       &out OUT_TOG    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3       &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
                                              &trans        &trans             &trans    &trans  &trans  &trans
            >;

            label = "CONFIG";
        };
    };
};
